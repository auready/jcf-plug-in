<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
#if(${TABLE_COMMENT})
<!-- ${TABLE_COMMENT} TABLE SQL-MAP -->
#end
#macro( comma )
#foreach( ${column} in ${COLUMNS} )
#if( $velocityCount == 1 )
${column.COLUMN_NAME}#if( $velocityHasNext ),#end#if(${column.COLUMN_COMMENTS})	/* ${column.COLUMN_COMMENTS} */#end
#else
         ${column.COLUMN_NAME}#if( $velocityHasNext ),#end#if(${column.COLUMN_COMMENTS})	/* ${column.COLUMN_COMMENTS} */#end
#end

#end
#end
#macro ( where )
#foreach( ${column} in ${COLUMNS} )
#if ( ${column.PK} )
#if( $velocityCount == 1 )
WHERE ${column.COLUMN_NAME} = ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP}
#else
          AND ${column.COLUMN_NAME} = ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP}
#end
#else
#if( $velocityCount == 1 )
WHERE <isNotEmpty property="${column.COLUMN_NAME_CAMEL}" >  ${column.COLUMN_NAME} = #${column.COLUMN_NAME_CAMEL}# </isNotEmpty>
#else
        <isNotEmpty property="${column.COLUMN_NAME_CAMEL}" prepend="AND" >  ${column.COLUMN_NAME} = #${column.COLUMN_NAME_CAMEL}# </isNotEmpty>
#end        
#end
#end
#end

#macro ( wherePK )
#foreach( ${column} in ${COLUMNS} )
#if ( ${column.PK} )
#if( $velocityCount == 1 )
${column.COLUMN_NAME} = ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP}
#else
          AND ${column.COLUMN_NAME} = ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP}
#end
#end
#end
#end

<sqlMap namespace="${UC_NAME_CAMEL}">

	<typeAlias alias="${UC_NAME_CAMEL}Model" type="${PACKAGE}.model.${UC_NAME}Model" />
	    	
	<statement id="get${UC_NAME}List" parameterClass="java.util.Map" resultMap="${UC_NAME_CAMEL}Model">
		SELECT 
			#comma()
		FROM 
			${TABLENAME}
		<dynamic>
			#where()
		</dynamic>
	</statement>

	<!-- ※저장(수정)일시는 테이블마다 컬럼이름이 다르니 테이블에 맞춰 추가해줘야 함 -->
	<statement id="insert${UC_NAME}" parameterClass="${UC_NAME_CAMEL}Model">
		INSERT INTO 
			${TABLENAME} (
			#comma()
			) VALUES (
	#foreach( ${column} in ${COLUMNS} )
		       ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP}#if( $velocityHasNext ),#end

	#end
		)	
	</statement>
	

	<statement id="update${UC_NAME}" parameterClass="${UC_NAME_CAMEL}Model">
		UPDATE 
			${TABLENAME} 
		SET 
			<dynamic prepend="where">
#foreach( ${column} in ${COLUMNS} )
#if (!(${column.PK}))
			<isNotEmpty property="${column.COLUMN_NAME_CAMEL}" prepend="," >  ${column.COLUMN_NAME} = ${SHARP}${column.COLUMN_NAME_CAMEL}${SHARP} </isNotEmpty>
#end
#end
			</dynamic>
		
		WHERE 
			#wherePK()
	</statement>
	
	<statement id="delete${UC_NAME}" parameterClass="${UC_NAME_CAMEL}Model">
	DELETE FROM 
		${TABLENAME}
	#if ( ${IS_PK_EXIST} == 'N' )
		#where()
	#else
		WHERE #wherePK()
	#end
	</statement>
 	
</sqlMap>